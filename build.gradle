apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'groovy'
apply plugin: 'java'

group 'com.keimons.platform'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    // 不要用 mavenCentral() 太慢了
    jcenter()
}

dependencies {
    // 仅编译时生效
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.8'

    compile group: 'com.google.guava', name: 'guava', version: '28.1-jre'

    // 序列化相关
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.54'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    compile group: 'com.baidu', name: 'jprotobuf', version: '2.2.14', transitive: false

    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.11'
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.7'

    compile group: 'io.netty', name: 'netty-all', version: '4.1.27.Final'

    // 定时任务框架
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0', transitive: false

    // 启用LogBack日志模块 需要以下三个依赖
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3', transitive: false
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Example Application'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A application used as an example on how to set up pushing its components to the Central Repository . '
                url 'http://www.example.com/example-application'

                scm {
                    connection 'scm:git:git@github.com:username/project.git'
                    developerConnection 'scm:git:git@github.com:username/project.git'
                    url 'https://github.com/username/project'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'manfred'
                        name 'Manfred Moser'
                        email 'manfred@sonatype.com'
                    }
                }
            }
        }
    }
}